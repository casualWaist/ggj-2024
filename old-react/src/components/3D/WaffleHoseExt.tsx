/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/WaffleHouseExt.glb -t
*/

import * as THREE from 'three'
import {Outlines, useGLTF} from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import {forwardRef} from "react"
import {Group, Object3DEventMap} from "three"

type GLTFResult = GLTF & {
  nodes: {
    Cube013: THREE.Mesh
    Cube013_1: THREE.Mesh
    Cube013_2: THREE.Mesh
    Cube013_3: THREE.Mesh
    Cube013_4: THREE.Mesh
  }
  materials: {
    ['murph color']: THREE.MeshStandardMaterial
    ['color chart']: THREE.MeshStandardMaterial
    floor: THREE.MeshStandardMaterial
    ['PARKING LOT']: THREE.MeshStandardMaterial
    ['awful house sign']: THREE.MeshStandardMaterial
  }
}

type Props = JSX.IntrinsicElements['group']
const WaffleHouseExt = forwardRef<Group<Object3DEventMap>, Props>((props: JSX.IntrinsicElements['group'], ref) => {
  const { nodes, materials } = useGLTF('/3DModels/WaffleHouseExt.glb') as GLTFResult
    const matMurph = new THREE.MeshBasicMaterial()
    matMurph.map = materials['murph color'].map
    matMurph.map!.flipY = false
    const matColor = new THREE.MeshBasicMaterial()
    matColor.map = materials['color chart'].map
    matColor.map!.flipY = false
    const matPark = new THREE.MeshBasicMaterial()
    matPark.map = materials.floor.map
    matPark.map!.flipY = false
    const matAwf = new THREE.MeshBasicMaterial()
    matAwf.map = materials.floor.map
    matAwf.map!.flipY = false
  return (
      <group {...props} ref={ref} dispose={null}>
          <mesh geometry={nodes.Cube013.geometry} material={matMurph}>
              <Outlines />
          </mesh>
          <mesh geometry={nodes.Cube013_1.geometry} material={matColor}>
              <Outlines />
          </mesh>
          <mesh geometry={nodes.Cube013_2.geometry} material={materials.floor}>
              <Outlines />
          </mesh>
          <mesh geometry={nodes.Cube013_3.geometry} material={matPark}>
              <Outlines />
          </mesh>
          <mesh geometry={nodes.Cube013_4.geometry} material={matAwf}>
              <Outlines />
          </mesh>
      </group>
  )
})
export default WaffleHouseExt

useGLTF.preload('/3DModels/WaffleHouseExt.glb')
